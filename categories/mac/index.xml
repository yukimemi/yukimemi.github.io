<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on YUKIMEMI</title>
    <link>http://yukimemi.github.io/categories/mac/</link>
    <description>Recent content in Mac on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 01 Oct 2017 18:21:37 +0900</lastBuildDate>
    
	<atom:link href="http://yukimemi.github.io/categories/mac/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fix conf with single user mode on mac</title>
      <link>http://yukimemi.github.io/post/2017-10-01_fix-conf-with-single-user-mode-on-mac/</link>
      <pubDate>Sun, 01 Oct 2017 18:21:37 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2017-10-01_fix-conf-with-single-user-mode-on-mac/</guid>
      <description>mac でシングルユーザーモードの起動と、設定ファイルの修正方法。
nas の自動マウントを行おうとして、 automount の設定を変更していたら、再起動後、 mac が起動しなくなった。
その修正方法。
Mac をシングルユーザモードまたは Verbose モードで起動する
ここを見ればわかるが、mac起動時に、 Command + S を押しっぱなしでシングルユーザーモードに入れる。
んで、あとは、 vi で設定をもとに戻して終了・・・っと思いきや、設定を書き込み出来なかった。
デフォルトだと、 / が読み込み専用でマウントされている。 書き込み可能で再マウントする。 (High Sierra だったので、APFS)
# mount_apfs -uw /  これで書き込みできる。 設定は、 man で確認できる。
# man 8 mount  修正後、再起動して完了。
# reboot  参考 Mac をシングルユーザモードまたは Verbose モードで起動する</description>
    </item>
    
    <item>
      <title>Type sound with Tickeys</title>
      <link>http://yukimemi.github.io/post/2016-09-03_type-sound-with-tickeys/</link>
      <pubDate>Sat, 03 Sep 2016 10:56:35 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2016-09-03_type-sound-with-tickeys/</guid>
      <description>最近、 Emacsで効果音(SE)を付けて作業効率を3倍にする方法 という記事を見つけた。
やっぱ音があった方がやる気が出るし、コードもすらすら書けるのではないか？ 僕は形から入るタイプなのである・・・。
そこで、Emacsと限らず他のものでもすべて音が出るようなソフトはないかと探してみた。
yingDev/Tickeys
Rust で書かれてるらしい。
インストール方法は homebrew cask で一発。
$ brew cask install tickeys  あとはシステム環境設定のアクセシビリティから許可するだけ。
起動したら QAZ123 とタイプすることで設定画面が開く。
音を選択出来るので、 Cherry G80-3000 ってやつにした。 良い音！たくさんタイプしたくなるので、コード書くのが捗ること間違いなし。
参考 Tickeys – メカニカルキーボードのタイプ音を堪能できるMacアプリ</description>
    </item>
    
    <item>
      <title>Set up Macbook in Ansible</title>
      <link>http://yukimemi.github.io/post/2015-07-26_set-up-macbook-in-ansible/</link>
      <pubDate>Sun, 26 Jul 2015 16:08:23 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2015-07-26_set-up-macbook-in-ansible/</guid>
      <description>せっかくMacbookを新調したので、セットアップを今までのオレオレスクリプトから、ansibleに移行した。
先人の参考になりまくる記事がいっぱいあるので、けっこう簡単に出来た。
yukimemi/ansible-playbook
参考記事だと、ansible-galaxyで、事前にhomebrewパッケージをインストールしなきゃいけない みたいに書いてあるけど、実際は不要だった。
べんりだansible。 Mac以外にも対応出来るように今後は拡張していきたい。
参考 AnsibleでHomebrew, Cask, Atomエディターのパッケージを管理する - Qiita
MacだってAnsibleで構成管理したい！ - Qiita
Mac の開発環境構築を自動化する (2015 年初旬編) - t-wadaのブログ</description>
    </item>
    
    <item>
      <title>New MacBook 12</title>
      <link>http://yukimemi.github.io/post/2015-07-26_new-macbook-12/</link>
      <pubDate>Sun, 26 Jul 2015 15:17:39 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2015-07-26_new-macbook-12/</guid>
      <description>ついに・・・ついに買ってしまった。New MacBook 12インチ。
今まで使ってたMacbook Air Late 2010のキーボードが急に反応しなくなってしまったため、 急遽New Macbook 12インチを新調した。
なんにもカスタマイズせずに一番安いのをヤマダ電機で購入した。
ヤマダのポイントが10パーついて、14000もポイントがある。 何に使おうか・・・。
肝心のMacbookの使い勝手は、もう文句なしに素晴らしい。 心配してた熱も特になし。
驚いたのが、こんなに薄いのに、思った以上に良い音が出るということ。
性能も十分だしすばらしい。ほんとAppleはすごい。</description>
    </item>
    
    <item>
      <title>Mac OS X Mavericks クリーンインストール</title>
      <link>http://yukimemi.github.io/post/2013-10-26-setup_mavericks/</link>
      <pubDate>Sat, 26 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2013-10-26-setup_mavericks/</guid>
      <description>Mavericks がなんと無料で出たので、早速アップデートしました。
新しいOSにする時は毎回全消去してからまっさらな状態で 新規インストールするので、今回も 【Mac】OS X Mavericks (マーベリックス)を クリーンインストールする方法 | 和洋風KAI を参考にして新規インストールした。
インストールした後は、以下のステップで環境を構築。
1. github と bitbucket にsshキーを登録 $ ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/Users/yukimemi/.ssh/id_rsa): [Enter] ... 全部 [Enter] .. . $ cat ~/.ssh/id_rsa.pub | pbcopy  github と bitbucket に元々登録してあったsshキーを削除して から、新たにクリップボードに入ってるキーを登録。
(このsshキーの登録もコマンドから出来たりせんのかな・・・)
2. github から、 dotfiles をクローン 自分の環境構築用 dotfiles をクローンする。
$ git clone git@github.com:yukimemi/dotfiles.git $ cd dotfiles $ ./setup.sh  これで一応ほぼ環境構築は終わり。 後は各アプリケーションの設定を個別にやるくらい。</description>
    </item>
    
  </channel>
</rss>