<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roots on YUKIMEMI</title>
    <link>http://yukimemi.github.io/categories/roots/</link>
    <description>Recent content in Roots on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 09 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://yukimemi.github.io/categories/roots/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>roots simple pagination</title>
      <link>http://yukimemi.github.io/post/2014-07-09_roots-simple-pagination/</link>
      <pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-07-09_roots-simple-pagination/</guid>
      <description>rootsは非常にシンプルで良いのだが、シンプルが故に通常のブログだと当たり前な部分を自分で実装しなければいけないところがある。
その一つが、ページネーション。
rootsでブログテンプレートを作成した場合、トップページはページネーションされず、書いていったブログ記事が全部リストで並ぶことになる。
まぁそんなたいした量を書いてないんで問題ないのだけれども、一応ブログとしてページネーションくらいはあったほうがいいと思い、実装方法を探してみた。
rootsは静的サイトジェネレーターなので、通常だとjadeの記法などでコンパイル時に出来るんだろうけど、今回はjqueryで簡単に出来る simplePagination.js というものが見つかったので、それを追加してみた。
インストール まず、追加するのにはbowerを使った。 ちなみにローカルにインストールしたbowerを使う方法は、前の記事 を参照。
$ npm install bower --save-dev  事前準備として、bowerのコンポーネントがインストールされる先を変更しておく。
roots のルートで、
$ vim .bowerrc  し、以下を記載。
{ &amp;quot;directory&amp;quot;: &amp;quot;assets/bower_components&amp;quot; }  その後、bowerにて、 simplePagination.js をインストールする。
$ bower install jquery.simplePagination --save  これで、 assets/bower_components 配下に保存される。
simplePagination.js 設定 jade側の設定 まずは、ページネーションの配置。
$ vim views/layout.jade  --- 省略 --- #main != content .pagination --- 省略 ---  divのclassで設定。単純に pagination というclassにて、divを配置しただけ。
それから、stylusでの設定がしやすいように、ブログ記事のリストにclassを設定しておく。
$ vim views/index.jade  ul#posts - each post in sort(site.</description>
    </item>
    
    <item>
      <title>roots new post command</title>
      <link>http://yukimemi.github.io/post/2014-06-26_roots-new-post-command/</link>
      <pubDate>Thu, 26 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-06-26_roots-new-post-command/</guid>
      <description>Tinkererでは、 tinker -p &amp;quot;hogehoge&amp;quot; で、新しい記事を作成することが出来た。 roots でも同じことがしたかったので、コマンドを作ってみた。
#!/bin/bash # posts dir postsDir=posts # title echo -n &amp;quot;title: &amp;quot; read title postFile=${postsDir}/$(date +%Y-%m-%d)_${title}.jade cat &amp;lt;&amp;lt; EOT &amp;gt;&amp;gt; &amp;quot;${postFile}&amp;quot; --- title: ${title} date: $(date &amp;quot;+%Y/%m/%d %H:%M&amp;quot;) layout: ../views/_single_post.jade --- :markdown // vim: ft=markdown EOT  これを pn というファイル名でpathの通った場所に保存すると、
$ pn title: hogehoge  とプロンプトが表示され、タイトルを打ち込むことで新しいブログ記事を作成出来る。 便利。</description>
    </item>
    
    <item>
      <title>roots install</title>
      <link>http://yukimemi.github.io/post/2014-06-25_roots-install/</link>
      <pubDate>Wed, 25 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-06-25_roots-install/</guid>
      <description>今までブログはTinkererを使用していたけど、これからは、 roots で書くことにしよう。
roots は、静的サイトジェネレーター。nodeで動く。 特徴としては、以下の形式で作成出来ること。
 スクリプト -&amp;gt; coffeescript HTML -&amp;gt; jade CSS -&amp;gt; stylus  しかも、ライブリロードが標準で組み込まれているので、これが非常に便利。 jade ファイルを保存したら、自動でブラウザが更新され、すぐ確認出来る。
ブログ作成手順 1. npmでグローバルにインストール $ npm install -g roots  2. ブログテンプレートでプロジェクト作成 $ roots new yukimemi.github.io --blog  これでブログ完成。
3. roots コマンドでコンパイル &amp;amp; ウォッチ $ cd yukimemi.github.io $ roots watch  自動的にコンパイルが動き、 public ディレクトリにコンパイル結果が入り、さらにport 1111でサーバ を起動してくれ、さらにデフォルトのブラウザで自動的に開いてくれる。(至れり尽くせり)
4. ブログ記事を修正 $ cdk posts $ vim hello_world.jade  修正して保存すると、ブラウザが自動でリロードされ、すぐさま修正結果を確認出来る。 すごい・・・。
参考: Node.js - 静的サイトジェネレーター「roots」 - Qiita</description>
    </item>
    
    <item>
      <title>Second roots</title>
      <link>http://yukimemi.github.io/post/2014-06-20-second_post/</link>
      <pubDate>Fri, 20 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-06-20-second_post/</guid>
      <description>roots
やっぱりいろいろ難しい。
とりあえず、 subtree push が便利っぽい。 がんばる。</description>
    </item>
    
    <item>
      <title>First roots</title>
      <link>http://yukimemi.github.io/post/2014-06-19-first_post/</link>
      <pubDate>Thu, 19 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-06-19-first_post/</guid>
      <description>はじめての「roots」
Markdown でもブログが書けるらしい。
移行しよかな。 ライブリロードがあるのがいいね。</description>
    </item>
    
  </channel>
</rss>