<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on YUKIMEMI</title>
    <link>http://yukimemi.github.io/tags/haskell/</link>
    <description>Recent content in Haskell on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 15 May 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://yukimemi.github.io/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>haskellでgitstatus</title>
      <link>http://yukimemi.github.io/post/2014-05-15-haskell_gitstatus/</link>
      <pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-05-15-haskell_gitstatus/</guid>
      <description>前に Go言語で 「すべてのディレクトリで git statusする」 という記事を書いた。
今度は、 haskell で同じようなのを書いてみた。
import System.IO import System.Process import System.Directory import Control.Exception import System.FilePath getAllFiles :: FilePath -&amp;gt; IO [String] getAllFiles dir = do contents &amp;lt;- getDirectoryContents dir `catch` (\(SomeException e) -&amp;gt; const (return []) e) let contents&#39; = [dir &amp;lt;/&amp;gt; path | path &amp;lt;- contents, notElem path [&amp;quot;.&amp;quot;, &amp;quot;..&amp;quot;]] contents&#39;&#39; &amp;lt;- mapM getAllFiles contents&#39; return $ contents&#39; ++ concat contents&#39;&#39; takeLast list n = reverse .</description>
    </item>
    
  </channel>
</rss>