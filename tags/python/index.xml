<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on YUKIMEMI</title>
    <link>http://yukimemi.github.io/tags/python/</link>
    <description>Recent content in Python on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 19 May 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://yukimemi.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tinkerer テーマ変更</title>
      <link>http://yukimemi.github.io/post/2014-05-19-change_theme/</link>
      <pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-05-19-change_theme/</guid>
      <description>Tinkerer のテーマを変えた。 tinkerturquoise ていうテーマ
naoiwata さん作成。 使用させて頂きます。
インストールの仕方は以下のページの通り。
sphinxjp.themes.tinkerturquoise 0.2.21 : Python Package Index</description>
    </item>
    
    <item>
      <title>pyenv python でも rbenv</title>
      <link>http://yukimemi.github.io/post/2013-11-03-pyenv/</link>
      <pubDate>Sun, 03 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2013-11-03-pyenv/</guid>
      <description>一昔前は、python で仮想環境といえば、 virtualenv と virtualenvwrapper だったっぽいけど、 今は rbenv とほぼ同じ使い勝手の pyenv がおすすめっぽい。
名前も 「〜env」で一緒だしね。
簡単導入 以下を .zshenv に追記
# pyenv [ ! -d $HOME/.pyenv ] &amp;amp;&amp;amp; git clone git://github.com/yyuu/pyenv.git ~/.pyenv if [ -d $HOME/.pyenv ]; then [ ! -d $HOME/.pyenv/plugins/pyenv-virtualenv ] &amp;amp;&amp;amp; git clone git://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv export PYENV_ROOT=&amp;quot;$HOME/.pyenv&amp;quot; export PATH=$PYENV_ROOT/bin:$PATH eval &amp;quot;$(pyenv init -)&amp;quot; fi  zshを再起動すればインストール完了。 pyenv 使いたくないってなったら、1行目の git clone をコメントアウト。
pyenv 使用方法 1. python のインストール $ pyenv install -l Available versions: 2.</description>
    </item>
    
    <item>
      <title>Tinkerer で「続きを読む」</title>
      <link>http://yukimemi.github.io/post/2013-06-23-add_more_directive/</link>
      <pubDate>Sun, 23 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2013-06-23-add_more_directive/</guid>
      <description>Tinkererで「続きを読む」をいれる方法。
「続きを読む」を入れたいところに more ディレクティブを入れる。
.. more::  以上！
参考: Tinkering — Tinkerer</description>
    </item>
    
    <item>
      <title>Tinkerer にソーシャルボタン追加</title>
      <link>http://yukimemi.github.io/post/2013-06-15-add_social_button/</link>
      <pubDate>Sat, 15 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2013-06-15-add_social_button/</guid>
      <description>今時のブログとしては、ソーシャルボタンは追加したい。
参考になる記事がいっぱいあったので、参考にしてやってみた。
事前準備 layout.html というファイルと page.html というファイルを作る。
layout.html は全体？ page.html は記事一つ一つみたいな感じがする。たぶん。
$ vim _templates/layout.html  中身はこんな感じ。
{% extends &amp;quot;!layout.html&amp;quot; %} {% block extrahead %} &amp;lt;!-- ここに html の ヘッダ部分に追加するスクリプトを書く --&amp;gt; {% endblock %}  ね。簡単でしょ。 1行目で既存の layout.html を継承してる。たぶん
layout.html では、extrahead というブロックを使うことで、既存の &amp;lt;head&amp;gt;タグに追加の情報を出力することが出来る。
次に page.html
$ vim _templates/page.html  中身はこんな感じ。
{% extends &amp;quot;!page.html&amp;quot; %} {% block body %} {{ timestamp(metadata.formatted_date) }} {% block buttons %} &amp;lt;!-- ここに ソーシャルボタンのコードを追加していく --&amp;gt; {% endblock %} {{ body }} {{ self.</description>
    </item>
    
    <item>
      <title>Tinkererでテーマカスタマイズ</title>
      <link>http://yukimemi.github.io/post/2013-06-13-change_theme/</link>
      <pubDate>Thu, 13 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2013-06-13-change_theme/</guid>
      <description>Tinkererのテーマをカスタマイズしたいと思った。
カスタマイズといってもそんな大層なことがしたいわけではなく。
デフォルトの &amp;ldquo;modern5&amp;rdquo; だと、横幅が狭いと思ったので広くしたかっただけ。 今時のワイド画面が多い中ではもうちょっと広くてもいいでしょう。
カスタマイズの方法は、まず元になるテーマである &amp;ldquo;modern5&amp;rdquo; をコピーしてくる。
$ mkdir -p _themes/mytheme $ cp -r ~/.virtualenvs/2.7.4/lib/python2.7/site-packages/tinkerer/themes/modern5/_themes/mytheme  それから、conf.pyにmythemeを使うことを明記する。
# Pick another Tinkerer theme or use your own html_theme = &amp;quot;mytheme&amp;quot; # Add other theme paths here html_theme_path = [&#39;_themes&#39;, tinkerer.paths.themes]  後は _themes/mytheme/static/modern5.css_t を編集すればいいみたい。
よくわからないけど、 width がついているところを全部 +200px したった。
参考: Tinkererを使ってblogを始める - KRAKENBEAL RECORDS</description>
    </item>
    
    <item>
      <title>First Tinkerer</title>
      <link>http://yukimemi.github.io/post/2013-05-27-first_tinkerer/</link>
      <pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2013-05-27-first_tinkerer/</guid>
      <description>Tinkerer でブログ書く。
今まではgithubでocropressで書いてたけど、やっぱこれからは sphinx でしょ！ markdown より reStructuredText でしょ！
で、 bitbucket を使う。
bitbucket では、 github と同じように、 &amp;lt;ユーザー名&amp;gt;.bitbucket.org で 自分のページを持つことが出来る。
リポジトリの作成 bitbucket で、 &amp;lt;ユーザー名&amp;gt;.bitbucket.org というリポジトリを作る。 僕の場合は、 yukimemi.bitbucket.org
Tinkererのインストール 僕の場合は python3 ではダメだったので、 python2.7.4 で virtualenv を作成して Tinkerer をインストールした。 python のインストールには pythonz を使用している。
$ pythonz install 2.7.4 $ mkvirtualenv -p /Users/yukimemi/.pythonz/pythons/CPython-2.7.4/bin/python --distribute 2.7.4 $ workon 2.7.4 $ easy_install pip $ pip install Tinkerer  ブログの作成 bitbucketでgit repositoryを作成したら、それを clone する。
$ git clone ssh://git@bitbucket.</description>
    </item>
    
  </channel>
</rss>