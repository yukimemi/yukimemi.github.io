<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Qfixhowm on YUKIMEMI</title>
    <link>http://yukimemi.github.io/tags/qfixhowm/</link>
    <description>Recent content in Qfixhowm on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 29 Jun 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://yukimemi.github.io/tags/qfixhowm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>qfixhowm Vim でメモ</title>
      <link>http://yukimemi.github.io/post/2013-06-29-qfixhowm/</link>
      <pubDate>Sat, 29 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2013-06-29-qfixhowm/</guid>
      <description>vimでメモをとる場合、簡単な設定では vimrc に JunkFile コマンドを定義するなどする。
&amp;quot; JunkFile {{{ &amp;quot; http://vim-users.jp/2010/11/hack181/ &amp;quot;&amp;quot; Open junk file. command! -nargs=0 JunkFile call s:open_junk_file() function! s:open_junk_file() let l:junk_dir = $HOME . &#39;/.vim_junk&#39;. strftime(&#39;/%Y/%m&#39;) if !isdirectory(l:junk_dir) call mkdir(l:junk_dir, &#39;p&#39;) endif let l:filename = input(&#39;Junk Code: &#39;, l:junk_dir.strftime(&#39;/%Y-%m-%d-%H%M%S.&#39;)) if l:filename != &#39;&#39; execute &#39;edit &#39; . l:filename endif endfunction &amp;quot; }}}  これは実行時に拡張子が自由に設定出来るので、簡単にスクリプトを試してみたい場合 はとても便利。
でも、やっぱり最近、メモは統合的に管理したいと思い、 QfixHowm を導入することにした。
インストール Neobundle で一発
NeoBundle &#39;fuenor/qfixgrep&#39; NeoBundle &#39;fuenor/qfixhowm&#39;  qfixgrep もいれとくと何かといいみたい。</description>
    </item>
    
  </channel>
</rss>