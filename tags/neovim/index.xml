<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Neovim on YUKIMEMI</title>
    <link>http://yukimemi.github.io/tags/neovim/index.xml</link>
    <description>Recent content in Neovim on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="http://yukimemi.github.io/tags/neovim/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Use denite instead of unite</title>
      <link>http://yukimemi.github.io/post/2017-05-24_Use%20denite/</link>
      <pubDate>Wed, 24 May 2017 18:15:16 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2017-05-24_Use%20denite/</guid>
      <description>&lt;p&gt;やろうやろうと思っていた、 &lt;a href=&#34;https://github.com/Shougo/denite.nvim&#34;&gt;Denite&lt;/a&gt; をついに使ってみた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Shougo/dein.vim&#34;&gt;dein&lt;/a&gt; を使って toml で設定。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;# ==================== Denite ==================== {{{1
[[plugins]]
repo = &#39;Shougo/denite.nvim&#39;
on_cmd = &#39;Denite&#39;
if = &amp;quot;has(&#39;python3&#39;)&amp;quot;
hook_add = &#39;&#39;&#39;
  &amp;quot; Use plefix s
  nnoremap suc :&amp;lt;C-u&amp;gt;Denite colorscheme -auto-preview&amp;lt;CR&amp;gt;
  nnoremap sub :&amp;lt;C-u&amp;gt;Denite buffer&amp;lt;CR&amp;gt;
  nnoremap suf :&amp;lt;C-u&amp;gt;Denite file&amp;lt;CR&amp;gt;
  nnoremap suF :&amp;lt;C-u&amp;gt;Denite file_rec&amp;lt;CR&amp;gt;
  nnoremap suu :&amp;lt;C-u&amp;gt;Denite buffer file_old&amp;lt;CR&amp;gt;
  nnoremap suo :&amp;lt;C-u&amp;gt;Denite outline -no-quit -mode=normal&amp;lt;CR&amp;gt;
  nnoremap suh :&amp;lt;C-u&amp;gt;Denite help&amp;lt;CR&amp;gt;
  nnoremap sur :&amp;lt;C-u&amp;gt;Denite register&amp;lt;CR&amp;gt;
  nnoremap sug :&amp;lt;C-u&amp;gt;Denite grep -no-empty&amp;lt;CR&amp;gt;
  nnoremap su/ :&amp;lt;C-u&amp;gt;Denite line&amp;lt;CR&amp;gt;
  nnoremap suR :&amp;lt;C-u&amp;gt;Denite -resume&amp;lt;CR&amp;gt;

  noremap sul :&amp;lt;C-u&amp;gt;Denite command_history&amp;lt;CR&amp;gt;

&#39;&#39;&#39;
hook_post_source = &#39;&#39;&#39;
  &amp;quot; Default options.
  call denite#custom#option(&#39;default&#39;, {
        \ &#39;prompt&#39;: &#39;»&#39;,
        \ &#39;cursor_wrap&#39;: v:true,
        \ &#39;auto_resize&#39;: v:true,
        \ &#39;highlight_mode_insert&#39;: &#39;WildMenu&#39;
        \ })
  &amp;quot; Pt command on grep source
  if executable(&#39;pt&#39;)
    call denite#custom#var(&#39;grep&#39;, &#39;command&#39;, [&#39;pt&#39;])
    call denite#custom#var(&#39;grep&#39;, &#39;default_opts&#39;,
          \ [&#39;--nogroup&#39;, &#39;--nocolor&#39;, &#39;--smart-case&#39;])
    call denite#custom#var(&#39;grep&#39;, &#39;recursive_opts&#39;, [])
    call denite#custom#var(&#39;grep&#39;, &#39;pattern_opt&#39;, [])
    call denite#custom#var(&#39;grep&#39;, &#39;separator&#39;, [&#39;--&#39;])
    call denite#custom#var(&#39;grep&#39;, &#39;final_opts&#39;, [])
  endif
  &amp;quot; custom mappings.
  call denite#custom#map(&#39;insert&#39;, &#39;&amp;lt;C-n&amp;gt;&#39;, &#39;&amp;lt;denite:move_to_next_line&amp;gt;&#39;, &#39;noremap&#39;)
  call denite#custom#map(&#39;insert&#39;, &#39;&amp;lt;C-p&amp;gt;&#39;, &#39;&amp;lt;denite:move_to_previous_line&amp;gt;&#39;, &#39;noremap&#39;)
  call denite#custom#map(&#39;insert&#39;, &#39;&amp;lt;C-[&amp;gt;&#39;, &#39;&amp;lt;denite:enter_mode:normal&amp;gt;&#39;, &#39;noremap&#39;)
  call denite#custom#map(&#39;normal&#39;, &#39;&amp;lt;C-[&amp;gt;&#39;, &#39;&amp;lt;denite:quit&amp;gt;&#39;, &#39;noremap&#39;)
&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とりあえず unite の時に使ってたのと似た感じで設定してみた。&lt;/p&gt;

&lt;p&gt;デフォルトオプションの設定と、キーマッピングの設定を追加でしている。
あと、 grep に pt を使って。&lt;/p&gt;

&lt;p&gt;jvgrep を使う設定にもしてみたんだけど、設定方法が悪いのかうまく出来なかったので、放置。 とりあえず pt でいい感じに使える。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>dein and vim singleton</title>
      <link>http://yukimemi.github.io/post/2016-12-09_dein%20and%20vim-singleton/</link>
      <pubDate>Fri, 09 Dec 2016 10:20:28 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2016-12-09_dein%20and%20vim-singleton/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://thinca.hatenablog.com/entry/20120201/1328099090&#34;&gt;vim-singleton&lt;/a&gt; という便利な vim plugin がある。&lt;/p&gt;

&lt;p&gt;vim の clientserver 機能を使って、ファイルをすでに起動している vim で開くことができる。&lt;/p&gt;

&lt;p&gt;これを &lt;a href=&#34;https://github.com/Shougo/dein.vim&#34;&gt;dein.vim&lt;/a&gt; と一緒に使用する時の方法がわからなかったので、 twitter でつぶやいてみた。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/yukimemi&#34;&gt;@yukimemi&lt;/a&gt; hook_source を使ってください。hook_add はロード前に呼ばれるのでエラーとなります&lt;/p&gt;&amp;mdash; 暗黒美夢王(deoplete dev) (@ShougoMatsu) &lt;a href=&#34;https://twitter.com/ShougoMatsu/status/805623471589892096&#34;&gt;2016年12月5日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;そしたらなんとあの Shougo さんからお返事が！！&lt;/p&gt;

&lt;p&gt;親切に教えてもらえました！&lt;/p&gt;

&lt;p&gt;そこで教えてもらった通り、 &lt;code&gt;hook_add&lt;/code&gt; から &lt;code&gt;hook_source&lt;/code&gt; に変更。&lt;/p&gt;

&lt;p&gt;こんな感じ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dein.toml&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[plugins]]
repo = &#39;thinca/vim-singleton&#39;
if = &amp;quot;!has(&#39;nvim&#39;)&amp;quot;
hook_source = &#39;&#39;&#39;
  call singleton#enable()
&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;それから、 lazy でないプラグインは、 &lt;code&gt;hook_source&lt;/code&gt; は動かないため、 &lt;code&gt;dein&lt;/code&gt; のドキュメントに書いてあるように &lt;code&gt;dein#call_hook(&#39;source&#39;)&lt;/code&gt; を手動で呼ぶ必要がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;init.vim&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;set shellslash
if has(&#39;nvim&#39;)
  let $VIM_PATH = expand(&#39;~/.config/nvim&#39;)
  let $MYVIMRC = expand(&#39;~/.config/nvim/init.vim&#39;)
else
  let $VIM_PATH = expand(&#39;~/.vim&#39;)
  let $MYVIMRC = expand(&#39;~/.vimrc&#39;)
  let $MYGVIMRC = expand(&#39;~/.gvimrc&#39;)
endif

&amp;quot; Use dein.
if has(&#39;nvim&#39;)
  let s:cache_home = expand(&#39;~/.cache/nvim&#39;)
else
  let s:cache_home = expand(&#39;~/.cache/vim&#39;)
endif

let s:dein_dir = s:cache_home . &#39;/dein&#39;
let s:dein_repo_dir = s:dein_dir . &#39;/repos/github.com/Shougo/dein.vim&#39;
if !isdirectory(s:dein_repo_dir)
  execute &#39;!git clone https://github.com/Shougo/dein.vim &#39; . s:dein_repo_dir
endif
execute &#39;set runtimepath^=&#39; . fnamemodify(s:dein_repo_dir, &#39;:p&#39;)

let g:dein#install_max_processes = 16
let g:dein#install_progress_type = &#39;title&#39;
let g:dein#enable_notification = 1
let s:toml_file = $VIM_PATH . &#39;/dein.toml&#39;
if dein#load_state(s:dein_dir)
  call dein#begin(s:dein_dir, [$MYVIMRC, s:toml_file])
  call dein#load_toml(s:toml_file)
  call dein#end()
  call dein#save_state()
endif
call dein#call_hook(&#39;source&#39;)

&amp;quot; Check and install.
if has(&#39;vim_starting&#39;) &amp;amp;&amp;amp; dein#check_install()
  call dein#install()
endif

&amp;quot; After dein
filetype plugin indent on
syntax enable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自分の設定はこんな感じ。
めちゃべんり。&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;参考&#34;&gt;参考&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;http://thinca.hatenablog.com/entry/20120201/1328099090&#34;&gt;singleton.vim 作った | 永遠に未完成&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Shougo/dein.vim/blob/master/doc/dein.txt&#34;&gt;dein.vim doc&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>