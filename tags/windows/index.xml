<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on YUKIMEMI</title>
    <link>http://yukimemi.github.io/tags/windows/</link>
    <description>Recent content in Windows on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 15 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://yukimemi.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Add --runcmd option to coffee-script-on-jscript</title>
      <link>http://yukimemi.github.io/post/2014-07-15_add---runcmd-option-to-coffee-script-on-jscript/</link>
      <pubDate>Tue, 15 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-07-15_add---runcmd-option-to-coffee-script-on-jscript/</guid>
      <description>先日の 記事 のthincaさんフォーク版、僕々仕様のWindows上でのCoffeeScriptコンパイラに --runcmd オプションを加えた。
yukimemi/coffee-script-on-jscript
&amp;gt; coffee Usage: coffee [options] path/to/script.coffee -b, --bare compile without the top-level function wrapper -c, --compile compile to JavaScript and save as .js files --encoding character encoding used by source files -e, --eval compile a string from the command line -h, --help display this help message -j, --join concatenate the scripts before compiling -n, --nodes print out the parse tree that the parser produces -o, --output set the directory for compiled JavaScript -p, --print print the compiled JavaScript to stdout -s, --stdio listen for and compile scripts over stdio -t, --tokens print the tokens that the lexer produces -v, --version display CoffeeScript version -w, --watch watch scripts for changes, and recompile -r, --runcmd run the compiled scripts as JScript  最後の行のやつ。</description>
    </item>
    
    <item>
      <title>CoffeeScript on Windows as wsh</title>
      <link>http://yukimemi.github.io/post/2014-07-14_coffeescript-on-windows-as-wsh/</link>
      <pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://yukimemi.github.io/post/2014-07-14_coffeescript-on-windows-as-wsh/</guid>
      <description>長い間、Windowsでcoffeescriptをwshとして記述する方法を模索していたけど、ようやく解が見つかった！！
thinca/coffee-script-on-jscript
thincaさん作成のcoffeescriptコンパイラ。Windowsで動く。nodejsもいらず、バッチファイル1つ coffee.bat と、公式の coffee-script.js だけで動く。
使用方法 &amp;gt; ghq get https://github.com/thinca/coffee-script-on-jscript.git  or
&amp;gt; git clone https://github.com/thinca/coffee-script-on-jscript.git  ghq があるなら上で。
後は普通のcoffeescriptコンパイラと同じオプションがだいたい使えるようなので、普通にコンパイルするのであれば
&amp;gt; coffee -c hello.coffee  とかで hello.js に変換される。
watch オプションもあるみたいなので、
&amp;gt; coffee -cw hello.coffee  としておくと、 hello.coffee を更新するたびに自動でコンパイルしてくれる。便利。
他のオプションは、 coffee.bat に何も引数をつけずに実行するとhelpで表示される。
&amp;gt; coffee Usage: coffee [options] path/to/script.coffee -b, --bare compile without the top-level function wrapper -c, --compile compile to JavaScript and save as .js files --encoding character encoding used by source files -e, --eval compile a string from the command line -h, --help display this help message -j, --join concatenate the scripts before compiling -n, --nodes print out the parse tree that the parser produces -o, --output set the directory for compiled JavaScript -p, --print print the compiled JavaScript to stdout -s, --stdio listen for and compile scripts over stdio -t, --tokens print the tokens that the lexer produces -v, --version display CoffeeScript version -w, --watch watch scripts for changes, and recompile  jscriptをバッチとして実行 上記までで、 coffeescript を jscript に変換することは簡単に出来るんだけど、どうせなら jscript からさらにバッチとして実行出来る状態に変換したい。 jscript をバッチとして実行するには、まさに coffee.</description>
    </item>
    
  </channel>
</rss>