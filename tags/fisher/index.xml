<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fisher on YUKIMEMI</title>
    <link>http://yukimemi.github.io/tags/fisher/</link>
    <description>Recent content in Fisher on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 27 Nov 2016 00:49:25 +0900</lastBuildDate>
    
	<atom:link href="http://yukimemi.github.io/tags/fisher/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use fish instead of zsh</title>
      <link>http://yukimemi.github.io/post/2016-11-27_use-fish-instead-of-zsh/</link>
      <pubDate>Sun, 27 Nov 2016 00:49:25 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2016-11-27_use-fish-instead-of-zsh/</guid>
      <description>ちまたで(？)話題の fish を使ってみた。
長年使ってきた zsh のかわりにはならないだろうなーと思いながら・・・。
・・・が、いざ使ってみると非常に使いやすい！
zsh のかわりになるどころか置き換えてしまった。
(つまり、自分は結局そこまで zsh を使いこなしていなかったんだろう・・・。)
fish のチュートリアルは、以下にある。
fish tutorial
日本語でもqiitaとかにいっぱい解説記事があるので難しいことはないと思う。 唯一はまったのは、上記tutorialにある、 hybrid_bindings 。
vi っぽいキーバインドで、 insert モードの場合は emacs っぽくするって感じなんだろうけど、使用できなかった。 なんか issue 上がってたりしたので、そのうち修正されるのかもしれない。
とりあえずは、必要なキーバインドのみを自分で再定義してやることで要望は満たせた。
fish では、 fisherman というプラグインマネージャーが存在しており、これを使って各種プラグインを管理する。 日本語での解説も書いてあるので導入は簡単。
$ curl -Lo ~/.config/fish/functions/fisher.fish --create-dirs git.io/fisher  上記を実行するだけ。
自分が入れたパッケージはとりあえずこんだけ。
 simple : シンプルなテーマ omf/gi : gitignore を管理できるやつ。  2個だけ。 fish が単体で色々出来るやつだからこそかも。
fish は、設定を ~/.config/fish 配下で管理する。 こんな感じ。
$ tree fish fish ├── completions ├── conf.d ├── config.</description>
    </item>
    
  </channel>
</rss>