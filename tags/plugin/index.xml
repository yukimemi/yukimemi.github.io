<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plugin on YUKIMEMI</title>
    <link>http://yukimemi.github.io/tags/plugin/</link>
    <description>Recent content in Plugin on YUKIMEMI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 08 Jun 2017 07:43:37 +0900</lastBuildDate>
    
	<atom:link href="http://yukimemi.github.io/tags/plugin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting of the vim-plug</title>
      <link>http://yukimemi.github.io/post/2017-06-08_vim-plug/</link>
      <pubDate>Thu, 08 Jun 2017 07:43:37 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2017-06-08_vim-plug/</guid>
      <description>ずっと dein.vim を使っていたのだけれど、ちょっと他のも試しに使ってみるかと思って、こっちも人気のある、 vim-plug を試しに使ってみた。
設定は公式のREADMEとかを参考にして、こんな感じになった。 (全部じゃないけど、抜粋して)
&amp;quot; Plugin: {{{1 &amp;quot; Use vim-plug. let s:cache_home = expand(&#39;~/.cache/nvim&#39;) let s:plug_dir = s:cache_home . &#39;/plugs&#39; let s:vim_plug_dir = s:cache_home . &#39;/vim-plug&#39; if has(&#39;vim_starting&#39;) if !isdirectory(s:vim_plug_dir) echo &amp;quot;Install vim-plug ...&amp;quot; execute &#39;!git clone --depth 1 https://github.com/junegunn/vim-plug.git &#39; . s:vim_plug_dir . &#39;/autoload&#39; endif execute &#39;set runtimepath^=&#39; . fnamemodify(s:vim_plug_dir, &#39;:p&#39;) endif &amp;quot; Helper function. function! Cond(cond, ...) let opts = get(a:000, 0, {}) return a:cond ?</description>
    </item>
    
    <item>
      <title>Zsh autosuggestions</title>
      <link>http://yukimemi.github.io/post/2016-09-25_zsh-autosuggestions/</link>
      <pubDate>Sun, 25 Sep 2016 23:53:12 +0900</pubDate>
      
      <guid>http://yukimemi.github.io/post/2016-09-25_zsh-autosuggestions/</guid>
      <description>zsh-autosuggestions という便利な zsh のプラギンを見つけた。
zplug を使って簡単にインストール可能。
zplug &amp;quot;zsh-users/zsh-autosuggestions&amp;quot;  あとは、表示された補完を決定するキーの設定を追加。 ちなみにデフォルトだと、右矢印が割り当てられてる模様。
bindkey &#39;^ &#39; autosuggest-accept  で、 Ctrl + Space で、補完候補が確定する。
べんり。</description>
    </item>
    
  </channel>
</rss>